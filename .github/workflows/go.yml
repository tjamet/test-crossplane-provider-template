# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:

  build:
    continue-on-error: true
    strategy:
        fail-fast: false
        matrix:
          version: [20, 21, 22]

    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.${{ matrix.version }}'
    - name: Install CLI
      run: go install github.com/crossplane/crossplane-tools/cmd/angryjet@master

    - name: Build
      run: |
        git clone https://github.com/crossplane/provider-template.git
        cd provider-template
        make submodules
        export provider_name=MyProvider
        make provider.prepare provider=${provider_name}
        export group=sample
        export type=MyType
        make provider.addtype provider=${provider_name} group=${group} kind=${type}
    - name: generate
      run: |
        make generate
    - name: call angryjet
      if: always()
      run: |
        (
          cd apis
          go run -tags generate github.com/crossplane/crossplane-tools/cmd/angryjet generate-methodsets --header-file=../hack/boilerplate.go.txt ./...
        )
